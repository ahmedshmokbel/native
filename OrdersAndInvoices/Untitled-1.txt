
                {this.props.Invoices.length == 0 ?
                    <View style={{ height: "95%", justifyContent: "center", alignItems: "center", textAlign: "center" }}>
                        <Text style={{ justifyContent: 'center', alignContent: 'center', fontSize: 20, color: "grey" }}>{String.NoInvoices}</Text>
                    </View>
                    :
                    <FlatList
                        data={this.props.Invoices}

                        renderItem={({ item: rowData }) => (
                            <TouchableOpacity onPress={() => this._OnPress(rowData)}>
                                {/* column */}
                                <Card containerStyle={styles.item}  >

                                    <View style={styles.dateView}>
                                        <Text style={styles.dateText}>{(rowData.InvoicePrintDate)}</Text>
                                        <Text style={styles.dateText}>{rowData.Status} #{rowData.SSONum}</Text>
                                    </View>

                                    <View style={{ paddingHorizontal: 10, paddingVertical: 5, flexDirection: 'row', }}>
                                        <View >
                                            <Text style={{ fontWeight: 'bold' }}>{getLocalizedJsonName(rowData.PartyName)}</Text>
                                        </View>

                                    </View>
                                    <View style={{ paddingHorizontal: 10, flexDirection: 'row', justifyContent: 'space-between', fontWeight: "bold" }}>
                                        <Text style={{ fontWeight: "bold" }}  >{(rowData.TotalInvoicePrice)} {String.LE}</Text>

                                        <Text style={{ color: 'green', fontWeight: "bold" }}  >{String.Net} : {(rowData.TotalInvoiceNet)}{String.LE} </Text>
                                    </View>
                                </ Card>
                            </TouchableOpacity>)}

                        keyExtractor={i => i.MobileRefNo}
                        //  refreshing={isRefreshing}
                        //  onRefresh={this.handleRefresh}
                        //    onEndReached={this.handleLoadMore}
                        onEndThreshold={0}
                        ItemSeparatorComponent={this.renderSeparator}

                    />
                }